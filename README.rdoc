= micromidi

A DSL for MIDI in Ruby

== Features
 
* Realtime MIDI IO
* Construct message objects
* Cross-platform compatible using MRI or JRuby.

== Installation

  gem install micromidi
  
== Requirements

Ruby 1.9.2+ or JRuby in 1.9 mode

Requires {midi-eye}[http://github.com/arirusso/midi-eye], {midi-message}[http://github.com/arirusso/midi-message] and {unimidi}[http://github.com/arirusso/unimidi].  These should install automatically with the gem.

== Usage

  require "micromidi"
  
==== Output
  
Here is an example that outputs some MIDI messages to a {unimidi}[http://github.com/arirusso/unimidi] output.  (read more {here}[http://github.com/arirusso/unimidi/blob/master/examples/select_a_device.rb] about selecting an output...)

  @output = UniMIDI::Output.first.open
  
  MIDI.message(@output) do
    
    note "C4"
    off 

    cc 5, 120
  
    play "C3", 0.5
  
  end 

As you might expect, that example does the following: 

output note C4 
output note-off for C4
sets controller number 5 to 120
outputs note C3
waits half a second
outputs note-off for C3

==== Input
  
Input works via configuration and binding events. Note that you can pass in as many inputs and outputs as you like.  If you wish to operate on certain devices specifically, open them in seperate blocks.

  input = UniMIDI::Input.first.open

  MIDI.message(input, output) do
    
    thru_unless :note
    
    listen_for :note do |message|
      message.note += 12
      output message
    end
  
    wait_for_input
      
  end
  
== To-do

* sysex Messages 
* more doc
 
== Documentation

* {rdoc}[http://rubydoc.info/github/arirusso/micromidi] 

== Author

* {Ari Russo}[http://github.com/arirusso] <ari.russo at gmail.com>

== License

Apache 2.0, See the file LICENSE

Copyright (c) 2011 Ari Russo
