= midi-messenger

A DSL for MIDI in Ruby

== Features

*Construct MIDI message objects and do realtime IO.  
*Cross-platform compatible using MRI or JRuby.

== Installation

  gem install midi-messenger
  
== Requirements

Ruby 1.9.2+ or JRuby in 1.9 mode

Requires {midi-eye}[http://github.com/arirusso/midi-eye], {midi-message}[http://github.com/arirusso/midi-message] and {unimidi}[http://github.com/arirusso/unimidi].  These should install automatically with the gem.

== Usage

  require "midi-messenger"
  
Here is an example of outputting some MIDI messages.  First select a unimidi output ({more...}[http://github.com/arirusso/unimidi/blob/master/examples/select_a_device.rb])

  output = UniMIDI::Output.first.open
  
Pass the output to midi-messenger and open a block to work in

  MIDI.message(output) do
  
Specify some MIDI messages
  
    note "C4"
    cc 5, 120

The off command will send a note-off message for the last note-on that was sent (in this case, C4)

    off 

You can also "play" notes, sending both an on and off message to follow.  This, for example, will play C3 for a half a second. 

    play "C3", 0.5
  
  end 
  
To enable input, simply pass in an input.  You can pass in as many inputs and outputs as you like

  input = UniMIDI::Input.first.open

  MIDI.message(input, output) do
  
Use the thru command to instantaneously send all inputted messages to the output(s).  

Filter by message type with using thru_if and thru_unless.  See {this}[blah] example for a list of message types. 
  
    thru_unless :note
    
Bind an input event using the receive method
    
    receive :note do |message|
      message.note += 12
      output message
    end
    
Wait for a message
  
    wait_for_input
    
Or bind an event that will stop the listener from waiting

    wait_for_input_until { |message| message.note > 64 }
  
  end 
 
== Documentation

* {rdoc}[http://rubydoc.info/github/arirusso/midi-messenger] 

== Author

* {Ari Russo}[http://github.com/arirusso] <ari.russo at gmail.com>

== License

Apache 2.0, See the file LICENSE

Copyright (c) 2011 Ari Russo
